
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.datatype.all;
entity tb is
end entity;
architecture beh of tb is
component Filter is
generic(Nb:integer :=10; N: integer :=10);
port(
	 DIN:in signed (Nb-1 downto 0);
	 VIN: in std_logic;
 	 rst_n: in std_logic;
	 clk : in std_logic;
	 B:in data ;
	 DOUT: out signed (Nb-1 downto 0);
	 VOUT: out std_logic);
end component;
signal DIN: signed (Nb-1 downto 0);
signal VIN: std_logic :='0';
signal rst_n:std_logic :='0';
signal clk:std_logic :='0';
signal B:data;

signal DOUT: signed (Nb-1 downto 0);
signal VOUT: std_logic :='0';
type data_c is array (20-1 downto 0) of signed (Nb-1 downto 0);
signal list_in:data_c ;
 begin
dut:Filter 
	generic map(Nb,N) 
	port map (DIN=>DIN,
	VIN=>VIN,
	rst_n=>rst_n,
	clk=>clk,
	B=>B,
	DOUT=>DOUT,
	VOUT=>VOUT);

clk <= not clk after 10 ns;
rst_n<='0', '1' after 21 ns;
B(0)<=to_signed(-1,B[0]'length);
initial:process(clk),rst_n)
variable
	VIN=0;
	rst_n=0;
	#21 rst_n=1;
	//B= '{-1,-7,-13,32,140,203,140,32,-13,-7,-1};
	//B[0]=-1;
	list_in= '{0,158,0,414,0,511,-1,414,-1,158,-1,-159,-1,-415,-1,-512,0,-415,0,-159};
	
	for(i=19;i>=0;i=i-1) begin
		#20;
		DIN=list_in[i];
		VIN=1;
	end
end

endmodule
